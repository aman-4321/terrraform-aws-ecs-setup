name: Build and Deploy Next.js App

on:
  push:
    branches: [main]
    paths:
      - "next-app/**"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./next-app
          file: ./next-app/Dockerfile
          load: true
          tags: next-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PORT=80

      - name: Tag and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nginx-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag next-app:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag next-app:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Force new deployment
        run: |
          aws ecs update-service --cluster nginx-cluster --service nginx-service --force-new-deployment
